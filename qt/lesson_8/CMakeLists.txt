cmake_minimum_required(VERSION 3.5)

project(dz_8_1 VERSION 0.1 LANGUAGES CXX)

set(CMAKE_INCLUDE_CURRENT_DIR ON)

set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

find_package(QT NAMES Qt6 Qt5 REQUIRED COMPONENTS Widgets)
find_package(Qt${QT_VERSION_MAJOR} REQUIRED COMPONENTS Widgets)
find_package(Qt${QT_VERSION_MAJOR} COMPONENTS LinguistTools)
find_package(Qt${QT_VERSION_MAJOR} REQUIRED COMPONENTS PrintSupport)
#target_link_libraries(dz_8_1 PRIVATE Qt6::PrintSupport)

set(PROJECT_SOURCES
        main.cpp
        mainwindow.cpp
        mainwindow.h
        mainwindow.ui
        settings.h settings.cpp settings.ui
        myjson.h myjson.cpp
        mysubwindow.h mysubwindow.cpp
        settings.json
        resource/resources.qrc
        finder.h finder.cpp
        #${TS_FILES}
)

set(TS_FILES
    ${CMAKE_CURRENT_SOURCE_DIR}/translations/TextEdit_en_EN.ts
    ${CMAKE_CURRENT_SOURCE_DIR}/translations/TextEdit_ru_RU.ts
)

file(GLOB_RECURSE TS_SOURCES "*.cpp" "*.h" "*.ui")
qt_create_translation(${TS_FILES} ${CMAKE_CURRENT_SOURCE_DIR} ${TS_FILES})


#add_custom_command(OUTPUT debug COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/settings.json ${CMAKE_BINARY_DIR}/settings.json)
#add_custom_command(OUTPUT release COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/settings.json ${CMAKE_BINARY_DIR}/settings.json)

#add_custom_target(target ALL
#    DEPENDS
#        $<$<CONFIG:Release>:release>
#        $<$<CONFIG:Debug>:debug>
#)

qt_add_translation(qm_files ${TS_FILES})

if(${QT_VERSION_MAJOR} GREATER_EQUAL 6)
    qt_add_executable(dz_8_1
        MANUAL_FINALIZATION
        ${PROJECT_SOURCES}
        ${qm_files}
    )
# Define target properties for Android with Qt 6 as:
#    set_property(TARGET dz_3_1 APPEND PROPERTY QT_ANDROID_PACKAGE_SOURCE_DIR
#                 ${CMAKE_CURRENT_SOURCE_DIR}/android)
# For more information, see https://doc.qt.io/qt-6/qt-add-executable.html#target-creation
   #qt_create_translation(QM_FILES ${CMAKE_SOURCE_DIR} ${TS_FILES})
else()
    if(ANDROID)
        add_library(dz_8_1 SHARED
            ${PROJECT_SOURCES}
        )
# Define properties for Android with Qt 5 after find_package() calls as:
#    set(ANDROID_PACKAGE_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/android")
    else()
        add_executable(dz_8_1
            ${PROJECT_SOURCES}
        )
    endif()
    #qt5_create_translation(QM_FILES ${CMAKE_SOURCE_DIR} ${TS_FILES})
endif()

target_link_libraries(dz_8_1 PRIVATE Qt${QT_VERSION_MAJOR}::Widgets Qt${QT_VERSION_MAJOR}::PrintSupport)

set_target_properties(dz_8_1 PROPERTIES
    MACOSX_BUNDLE_GUI_IDENTIFIER my.example.com
    MACOSX_BUNDLE_BUNDLE_VERSION ${PROJECT_VERSION}
    MACOSX_BUNDLE_SHORT_VERSION_STRING ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}
    MACOSX_BUNDLE TRUE
    WIN32_EXECUTABLE TRUE
)

if(QT_VERSION_MAJOR EQUAL 6)
    qt_finalize_executable(dz_8_1)
endif()
